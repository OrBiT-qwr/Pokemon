from random import randint
import requests

class Pokemon:
    pokemons = {}  # сохраняет покемонов по username
    last_pokemons = []  # список последних созданных покемонов (для боя)

    def __init__(self, pokemon_trainer):
        self.pokemon_trainer = pokemon_trainer
        self.pokemon_number = randint(1, 1000)

        # Получаем имя и картинку
        self.name = self.get_name()
        self.img = self.get_img()

        # Добавим параметр "уровень" (для простоты — от 1 до 100)
        self.level = randint(1, 100)
        self.hp = randint(70,100)
        self.power = randint(20,30)
        self.crit = randint(0,10)
        # Сохраняем покемона
        Pokemon.pokemons[pokemon_trainer] = self

        # Добавляем в список последних покемонов (максимум 2)
        Pokemon.last_pokemons.append(self)
        if len(Pokemon.last_pokemons) > 2:
            Pokemon.last_pokemons.pop(0)

    def get_img(self):
        url = f'https://pokeapi.co/api/v2/pokemon/{self.pokemon_number}'
        response = requests.get(url)
        if response.status_code == 200:
            data = response.json()
            return data['sprites']['front_default']
        else:
            return None

    def info(self):
        return f"Имя покемона: {self.name}, Уровень: {self.level}"

    def show_img(self):
        return self.img

    def attack(self, enemy):
        if enemy.hp > self.power:
            enemy.hp -= self.power
            print({self.power})
            return f"Сражение @{self.pokemon_trainer} с @{enemy.pokemon_trainer},"
        else:
            enemy.hp = 0
            return f"Победа @{self.pokemon_trainer} над @{enemy.pokemon_trainer}! "

class Fighter(Pokemon):

    def attack(self, enemy):
        sp = randint(5,15)
        self.power += sp
        r = super().attack(enemy)
        self.power -= sp
        return r + f"\nБоец применил супер-атаку силой:{sp} "
